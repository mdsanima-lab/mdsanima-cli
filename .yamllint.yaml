# Maintain a consistent coding style throughout the entire project codebase to
# ensure readability and maintainability.  Consistent style not only improves
# collaboration but also makes the code easier to review and debug.

# Linter configuration for YAML files.  This tool uses a predefined set of rules
# to check source files for issues such as line length, trailing spaces, and
# indentation.  It is available as a Python based command line tool and can also
# integrate with your editor to display diagnostics like warnings or errors from
# the YAML language server.  These diagnostics are based on the rules defined in
# this configuration file.  For more information about, refer to the docs and
# source code, see here: https://github.com/adrienverge/yamllint

# The rules are still a work in progress and subject to change.  I still need
# to think about this configuration, and for now this is a base template.

---
extends: default

rules:
  line-length:
    max: 80
    level: warning
  indentation: enable
